-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.challenge_attempts
(
    created_at timestamp with time zone DEFAULT now(),
    user_id uuid NOT NULL,
    challenge_id bigint NOT NULL,
    attempts smallint NOT NULL DEFAULT '0'::smallint,
    completed boolean NOT NULL DEFAULT false,
    points_scored smallint NOT NULL DEFAULT '0'::smallint,
    CONSTRAINT challenge_attempts_pkey PRIMARY KEY (user_id, challenge_id),
    CONSTRAINT challenge_attempts_challenge_id_fkey FOREIGN KEY (challenge_id)
        REFERENCES public.challenges (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT challenge_attempts_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.challenge_attempts
    OWNER to postgres;

ALTER TABLE IF EXISTS public.challenge_attempts
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.challenge_attempts TO anon;

GRANT ALL ON TABLE public.challenge_attempts TO authenticated;

GRANT ALL ON TABLE public.challenge_attempts TO postgres;

GRANT ALL ON TABLE public.challenge_attempts TO service_role;
CREATE POLICY "Allow insert write access for service role"
    ON public.challenge_attempts
    AS PERMISSIVE
    FOR INSERT
    TO service_role
    WITH CHECK (true);
CREATE POLICY "Allow read access for individual user"
    ON public.challenge_attempts
    AS PERMISSIVE
    FOR SELECT
    TO authenticated
    USING ((auth.uid() = user_id));
CREATE POLICY "Allow update write access for service role"
    ON public.challenge_attempts
    AS PERMISSIVE
    FOR UPDATE
    TO service_role
    WITH CHECK (true);
