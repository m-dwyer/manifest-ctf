-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.categories
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (id),
    CONSTRAINT categories_name_key UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.categories
    OWNER to postgres;

ALTER TABLE IF EXISTS public.categories
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.categories TO anon;

GRANT ALL ON TABLE public.categories TO authenticated;

GRANT ALL ON TABLE public.categories TO postgres;

GRANT ALL ON TABLE public.categories TO service_role;

CREATE TABLE IF NOT EXISTS public.challenge_categories
(
    created_at timestamp with time zone DEFAULT now(),
    challenge bigint NOT NULL,
    category bigint NOT NULL DEFAULT '1'::bigint,
    CONSTRAINT challenge_categories_pkey PRIMARY KEY (challenge, category),
    CONSTRAINT challenge_categories_category_fkey FOREIGN KEY (category)
        REFERENCES public.categories (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT challenge_categories_challenge_fkey FOREIGN KEY (challenge)
        REFERENCES public.challenges (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.challenge_categories
    OWNER to postgres;

ALTER TABLE IF EXISTS public.challenge_categories
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.challenge_categories TO authenticated;

GRANT ALL ON TABLE public.challenge_categories TO anon;

GRANT ALL ON TABLE public.challenge_categories TO service_role;

GRANT ALL ON TABLE public.challenge_categories TO postgres;

REVOKE ALL ON TABLE public.challenge_attempts FROM authenticated;
REVOKE ALL ON TABLE public.challenge_attempts FROM postgres;
REVOKE ALL ON TABLE public.challenge_attempts FROM service_role;
GRANT ALL ON TABLE public.challenge_attempts TO authenticated;

GRANT ALL ON TABLE public.challenge_attempts TO service_role;

GRANT ALL ON TABLE public.challenge_attempts TO postgres;
